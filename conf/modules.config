/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.patient}/${meta.patient}_${meta.sample}/low_pass_wgs/reports/fastqc" },
            mode: params.publish_dir_mode,
            pattern: "*{html,zip}"
        ]
    }

    withName: BWA_MEM {
        ext.args = { "-K 100000000 -Y -R ${meta.rg}" }
    }

    withName: MOSDEPTH {
        ext.args = { if ( params.genome == "GATK.GRCh38" )
                        { "--by $chr_bed" }
                    else
                        { null }
        }
        publishDir = [
            path: { "${params.outdir}/${meta.patient}/${meta.id}/low_pass_wgs/reports/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            pattern: "*{txt,csi,gz}"
        ]
    }

    withName: HMMCOPY_READCOUNTER {
        ext.args = { if ( params.genome == "GATK.GRCh38" )
            { '--chromosome chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chrX' }
        }
        ext.args2 = {   if ( params.map_bin == "10kb" )
                            { '--window 10000' }
                        else if ( params.map_bin == "50kb" )
                            { '--window 50000' }
                        else if ( params.map_bin == "500kb" )
                            { '--window 500000' }
                        else if ( params.map_bin == "1000kb" )
                            { '--window 1000000' }
        }
    }

    withName: HMMCOPY_GCCOUNTER {
        ext.args = { if (params.genome == "GATK.GRCh38" )
                        { '--chromosome chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chrX' }
            }
        ext.args2 = { if ( params.map_bin == "10kb" )
                        { '--window 10000' }
                    else if ( params.map_bin == "50kb" )
                        { '--window 50000' }
                    else if ( params.map_bin == "500kb" )
                        { '--window 500000' }
                    else if ( params.map_bin == "1000kb" )
                        { '--window 1000000' }
            }
    }

    withName: ICHORCNA_RUN {
        ext.args = { params.normal ? "--NORMWIG=" : "" }
        ext.args2 = {   if  ( params.ichor_purity == "cf_dna" )
                            {   '''--normal "c(0.8,0.95, 0.99, 0.995, 0.999)" \\
        --ploidy "c(2)" \\
        --maxCN 3 \\
        --estimateScPrevalence FALSE \\
        --scStates "c()" \\
        --chrs 'paste0("chr",c(1:22,"X"))' \\
		--chrNormalize 'paste0("chr", c(1:22))' \\
        --chrTrain 'paste("chr", c(1:22)' '''}
                        else if ( params.ichor_purity == null ) { "" }
                    }
        ext.args3 = { params.ichor_purity_manual ? "--normal \"${params.ichor_purity_manual}\""  : "" }
        publishDir = [
            path: { params.ichor_purity_manual ? "${params.outdir}/${meta.patient}/${meta.id}/low_pass_wgs/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}_${params.map_bin}/ichor_purity_manual" : "${params.outdir}/${meta.patient}/${meta.id}/low_pass_wgs/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}_${params.map_bin}" },
            mode: params.publish_dir_mode,
            pattern: "filter*"
        ]
    }

    withName: ACE {
        publishDir = [
            path: { "${params.outdir}/${meta.patient}/${meta.id}/low_pass_wgs/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            pattern: "filter_*"
        ]
    }

   withName: PICARD_COLLECTINSERTSIZEMETRICS {
        ext.args   = { params.insertsizemetrics ? "${params.insertsizemetrics}" : "600" }
        publishDir = [
            [
                path: { "${params.outdir}/${meta.patient}/${meta.id}/low_pass_wgs/reports/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
                mode: params.publish_dir_mode,
                pattern: "*{txt,pdf}"
            ],
        publishDir = [
                path: { "${params.outdir}/${meta.patient}/${meta.id}/low_pass_wgs/bwa/" },
                mode: params.publish_dir_mode,
                pattern: "*{bam,bai}"
            ]
        ]
    }

    withName: PICARD_COLLECTALIGNMENTSUMMARYMETRICS {
        publishDir = [
            path: { "${params.outdir}/${meta.patient}/${meta.id}/low_pass_wgs/reports/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            pattern: "*metrics"
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.outdir}/reports/low_pass_wgs/" },
            mode: params.publish_dir_mode
        ]
    }

}
